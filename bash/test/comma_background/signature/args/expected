#python

from functools import reduce

# iterate through a path of attributes: "obj/data/member/value"
def deepgetattr(obj, attr):
    """Recurses through an attribute chain to get the ultimate value."""
    return reduce(getattr, attr.split('/'), obj)

# allows fetching elements from a dictionary as if it were an object
class objectview(object):
    def __init__(self, d):
        self.__dict__ = d

olocals = objectview( locals() )

di = { "TERM" : sigterm/status, "USR1" : sigusr1/status }

for variable in [ "default", "mysignature" ]:
    for verbosity in [ "quiet", "verbose" ]:
        for signal in [ "TERM", "USR1" ]:
            name = "/".join( [ variable, verbosity, signal ] )
            obj = deepgetattr( olocals, name )
            expect obj/comma_process_exec_and_validate/status == 0
            expect obj/comma_process_kill/status == 0
            expect obj/handler/signal == signal
            expect obj/background/status == di[signal]
