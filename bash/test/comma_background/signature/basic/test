#!/bin/bash

scriptname=$( basename "$0" )

source $( which comma-process-util ) || { echo "$scriptname: cannot source 'comma-process-util'" >&2; exit 1; }

output_dir="output"
temp_dir="$output_dir/temp"

rm -rf "$temp_dir" || exit 1
mkdir -p "$temp_dir" || { echo "$scriptname: cannot create directory '$temp_dir'" >&2; exit 1; }
fifo="$temp_dir/pipe"
trap "rm -f \"$fifo\"" EXIT
mkfifo "$fifo" || { echo "$scriptname: cannot create named pipe '$fifo'" >&2; exit 1; }

ticks=$( getconf CLK_TCK )
echo "clock_ticks_per_second=$ticks"

comma_process_exec_and_validate "$fifo" sleep 100 || { echo "$scriptname: fatal system error, wrong background PID" >&2; exit 1; }
background_pid=$!

now=$( python3 -c "import sys; from numpy import int64; a = sys.stdin.readline().split()[0]; print( int64(float(a) * $ticks) )" < /proc/uptime )
echo "time/now=$now"

signature=$( comma_process_signature "$background_pid" )
status=$?
echo "comma_process_signature/signature=$signature"
echo "comma_process_signature/status=$status"

comma_process_kill "$background_pid" "$signature"
echo "comma_process_kill/status=$?"

wait $background_pid
echo "background/status=$?"
echo "sigterm/status=$(( 128 + $( kill -l TERM ) ))"
