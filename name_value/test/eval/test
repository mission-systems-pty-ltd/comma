#!/bin/bash

name=$0

if [[ $name = */* ]]; then dir="${name%/*}"; else dir="."; fi
data_dir="$dir/data"

if [[ ! -d "$data_dir" ]]; then
    echo "$name: cannot find data directory $data_dir" >&2
    exit 1
fi

tmpdir="output/tmp"
rm -rf $tmpdir
mkdir $tmpdir -p
verbose=0

while [[ $# -gt 0 ]]; do
    case "$1" in
        -v|--verbose) verbose=1;;
        -p=*|--path=*) :;;
        -*)           echo "$name: unrecognized option '$1'" >&2; exit 1;;
        *)            echo "$name: unexpected argument '$1'" >&2; exit 1;;
    esac
    shift
done

variables="$data_dir/variable_vals"
pass_count=0
total_count=0
python_version="$( python -c "from __future__ import print_function; import sys; print( sys.version_info.major )" )" # sigh...
python_prefix="python${python_version}:"

for input in $data_dir/input*; do
    (( ++total_count ))
    suffix=${input#*input_}
    if (( verbose )); then echo "$name: running test $suffix" >&2; fi
    stdout="$tmpdir/stdout.$suffix"
    stderr="$tmpdir/stderr.$suffix"
    if grep -q "$python_prefix" < "$data_dir/stderr_$suffix"; then
        expected_stderr="$( grep "^$python_prefix" < "$data_dir/stderr_$suffix" | sed "s#^$python_prefix##" )" # quick and dirty; sigh...
    else
        expected_stderr="$( cat "$data_dir/stderr_$suffix" )"
    fi
    cat $input | name-value-eval --variables=$variables --test > $stdout 2> $stderr
    actual_stderr=$( cat $stderr )
    if ! cmp --quiet $stdout $data_dir/stdout_$suffix; then
        echo "$name: test failed for input_$suffix (stdout is different):" >&2
        diff $stdout $data_dir/stdout_$suffix >&2
    elif ! cmp --quiet <( echo "$actual_stderr" ) <( echo "$expected_stderr" ); then
        diff <( echo "$actual_stderr" ) <( echo "$expected_stderr" ) >&2
    else
        (( ++pass_count ))
        if (( verbose )); then echo "$name: test $suffix passed" >&2; fi
        echo $(basename "$input" )"=\"pass\""
    fi
done

echo "count/total=$total_count"
echo "count/pass=$pass_count"
