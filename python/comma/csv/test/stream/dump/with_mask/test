#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma

point_t = comma.csv.struct( 'x,y,mask', 'float64', 'float64', 'uint32' )
if "$input_format":
    format = ','.join(comma.csv.format.to_numpy("$input_format"))
else:
    format = ''
stream = comma.csv.stream( point_t, fields='x,name,y,mask', format=format  )

for points in stream.iter(size=3):
  # changes below should not affect dump as it uses internal buffers
  points['x'] = points['x'] + 1
  points['y'] = points['y'] + 1
  mask = points['mask'].astype('bool')
  stream.dump(mask=mask)
END
)"
}

input_format='d,s[3],d,ui'
output_format='d,s[3],d,ui'

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

