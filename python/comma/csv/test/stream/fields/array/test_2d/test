#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma
import numpy

event_t = comma.csv.struct( 'time,signal', 'datetime64[us]', '(2,3)f8' )
record_t = comma.csv.struct( 'observer,event', 'S3', event_t )

fields = ',event/signal,observer,,event/time,,'
format = 'i4,(2,3)f8,S3,S7,datetime64[us],u4,u4' if "$input_format" else ''
record_stream = comma.csv.stream( record_t, fields=fields, format=format )

for i,r in enumerate( record_stream.iter( size=1 ), start=1 ):
  r['observer'] = numpy.char.upper( r['observer'] )
  r['event']['time'] += numpy.timedelta64( i, 's' )
  r['event']['signal'] += [ [i,-1,-2], [-3,-4,-5] ]
  record_stream.write( r )
END
)"
}

input_format='i,6d,s[3],s[7],t,2ui'
output_format='s[3],t,6d'

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

