#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma
import numpy

point_t = comma.csv.struct( 'x,y,z', 'float64', 'float64', 'float64' )
timestamped_point_t = comma.csv.struct( 'time,coordinates', 'datetime64[us]', point_t )
record_t = comma.csv.struct( 'observer,event', 'S3', timestamped_point_t )

fields = ',event/coordinates/y,event/coordinates/z,observer,,event/time,event/coordinates/x,,'
format = 'int32,float64,float64,S3,S7,datetime64[us],float64,uint32,uint32' if "$input_format" else ''
record_stream = comma.csv.stream( record_t, fields=fields, format=format )

record_stream.read( size=1 ) # skip one line
r = record_stream.read( size=2 )
r['observer'][1] = numpy.char.upper( r['observer'][1] )
r['event']['time'][1] += numpy.timedelta64( 1, 's' )
r['event']['coordinates']['x'][1] += 1
record_stream.write( r )
END
)"
}

input_format='i,2d,s[3],s[7],t,d,2ui'
output_format='s[3],t,3d'

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

