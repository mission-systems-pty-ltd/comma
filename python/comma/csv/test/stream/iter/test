#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma
import numpy

point_t = comma.csv.struct( 'x,y,z', 'float64', 'float64', 'float64' )
timestamped_point_t = comma.csv.struct( 'time,coordinates', 'datetime64[us]', point_t )
record_t = comma.csv.struct( 'observer,event', 'S3', timestamped_point_t )
if "$input_format":
    format = ','.join(comma.csv.format.to_numpy("$input_format"))
else:
    format = ''
record_stream = comma.csv.stream( record_t, binary=bool("$input_format") )

i = 1
for r in record_stream:
  r['observer'] = numpy.char.upper( r['observer'] )
  r['event']['time'] += numpy.timedelta64( i, 's' )
  r['event']['coordinates']['x'] += i
  record_stream.write( r )
END
)"
}

input_format='s[3],t,3d'
output_format='s[3],t,3d'

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

