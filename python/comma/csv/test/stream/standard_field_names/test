#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma

point_t = comma.csv.struct( 'x,y', 'float64', 'float64' )

fields = ',x,,y,'
if "$input_format":
    format = ','.join(comma.csv.format.to_numpy("$input_format"))
else:
    format = ''
input_stream = comma.csv.stream( point_t, fields=fields, format=format )

output_t = comma.csv.struct( 'f0', 'float64' )
output_stream = comma.csv.stream( output_t, binary=bool("$input_format"), tied=input_stream )

for points in input_stream.iter():
  output = ( points['x'] + points['y'] ).view( output_t )
  output_stream.write( output )
END
)"
}

input_format='i,d,i,d,i'
output_format="$input_format,d"

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

