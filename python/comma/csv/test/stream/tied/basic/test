#!/bin/bash

source $( which comma-application-util )

function output { local prefix=$1; gawk '{ print "'${prefix:+$prefix/}'output/line["NR-1"]="$0 }' ; }

function process_records
{
    local input_format=$1
    python3 -c "$( cat <<END
import comma
import numpy

point_t = comma.csv.struct( 'x,y,z', 'float64', 'float64', 'float64' )
event_t = comma.csv.struct( 'time,coordinates', 'datetime64[us]', point_t )

input_stream = comma.csv.stream( event_t, binary=bool("$input_format") )

output_t = comma.csv.struct( 'max,flags', 'float64', '(3,)uint32' )
output_stream = comma.csv.stream( output_t, binary=bool("$input_format"), tied=input_stream )

for events in input_stream.iter():
  output = numpy.empty( events.size, dtype=output_t )
  output['max'] = numpy.max( events['coordinates'].view( '3f8' ), axis=1 )
  output['flags'] = [10,20,30]
  output_stream.write( output )
END
)"
}

input_format="t,3d"
output_format="$input_format,d,3ui"

input=$( cat )
echo "$input" | process_records | output ascii
comma_status_ok
echo "ascii/status=$?"

echo "$input" | csv-to-bin $input_format | process_records $input_format | csv-from-bin $output_format | output binary
comma_status_ok
echo "binary/status=$?"

