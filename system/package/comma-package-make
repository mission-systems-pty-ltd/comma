#!/bin/bash

function die() { echo "$0: $@" >&2; exit 1; }

ubuntu_version=$1
version_major=$2
version_minor=$3
version_patch=$4
comma_dir="$5"
[[ -n "$comma_dir" ]] || comma_dir=$( realpath ~/src/comma )
[[ -n "$version_patch" ]] || { echo "usage: $0 <ubuntu version> <comma version major> <comma version minor> <comma version patch> [<comma dir>]" >&2; exit 1; }
cd ~
echo "$0: running ansible-playbook '$comma_dir/system/ansible/install.python3.yml' in $( pwd )..." >&2
ansible-playbook "$comma_dir/system/ansible/install.python3.yml" || die "failed"
case $ubuntu_version in
    18.04) libproc_version="libprocps6 (>= 2:3.3.0)" ;;
    20.04) libproc_version="libprocps8 (>= 1)" ;;
    *) libproc_version="libprocps8 (>= 1)" ;; # for now
esac
(
    cd ~/build/comma
    echo "$0: running cmake in $( pwd )" >&2
    cmake . -DCPACK_GENERATOR=DEB \
            -DBUILD_PYTHON_PACKAGES=ON \
            -DADD_PYTHON_PACKAGES_TO_RPM=OFF \
            -DBUILD_SHARED_LIBS=ON \
            -DBUILD_TESTS=OFF \
            -DBUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DINSTALL_TESTS=OFF \
            -DCPACK_DEPENDENCIES_LIBPROCPS="$libproc_version" \
            -DCPACK_PACKAGE_VERSION_MAJOR=$version_major \
            -DCPACK_PACKAGE_VERSION_MINOR=$version_minor \
            -DCPACK_PACKAGE_VERSION_PATCH=$version_patch  || die "failed"
    echo "$0: running cpack in $( pwd )" >&2
    cpack || die "failed"
    cd ~/src/comma/python
    echo "$0: setting up python in $( pwd )" >&2
    python3 setup.py --command-packages=stdeb.command bdist_deb || die "failed"
    # todo: optionally run full regression test
    echo "$0: done" >&2
)
cp ~/build/comma/comma-$version_major.$version_minor.$version_patch-Linux.deb output
cp ~/src/comma/python/deb_dist/python3-comma*.deb output
